.\" .cflags 0 . ! ?
.if '\*[Litb]'' .ds Litb Table
.if '\*[Lifg]'' .ds Lifg Figure
.\" **** PICs *****************************************************
.nr IMAGE 0 1 \" register for image number, autoincrement
.nr TABLE 0 1 \" register for image number, autoincrement
.\" Future groff will not need this:
.if ((\n[.x]<2)&&(\n[.y]<24)) \{
.  if !r PDFPIC_NOSPACE \{\
.    \" tm Redefining PDFPIC to behave like PSPIC
.    am PDFPIC
.      ie '\\*[.T]'pdf' \{\
.        sp \\n[pdf-desht]u
.        nr PIC-HT \\n[pdf-desht]
.        nr PIC-WID \\n[pdf-deswid]
.      \}
.      el \{\
.        nr PIC-HT \\n[ps-desht]
.        nr PIC-WID \\n[ps-deswid]
.      \}
.    .
.  \}
.\}
.de ANYPIC
.\"  br
.  nr FILLED_BEFORE \\n[.u]
.  ie (\\n[FROM_PANDOC] & \\n[FILLED_BEFORE]) .ds ORIENT -L
.  el .ds ORIENT -C
.  nf
.\" \\i'\\n[PICWIDTH]u'
.      \" from groff_tmac(7)
.  vpt 0
.  sp -1
.  vpt 1
.  ie !'\\$2'' \{\
.    ie '\\$1'F' .KF \" start keep - floating with KF
.    el .KS \" start keep - non-floating with KS
.  \}
.  nr OLD_PI \n[PI]
.  nr PI 0u
.  \" PDFPIC only scales to LL if no width is given:
.  nr PICWIDTH \\$4
.  nr PICHEIGHT \\$5
.  ie \\n[SCALE_TO_LL] \{
.    nr PICWIDTH_O \\$4
.    nr PICHEIGHT_O \\$5
.    nr PICWIDTH (\\n[PICWIDTH] <? (\\n(LL)))
.    nr PICHEIGHT (\\n[PICHEIGHT] <? (\\n(.p)))
.    nr REL_HEIGHT 1000
.    nr REL_WIDTH 1000
.    if \\n[PICHEIGHT] \
.      nr REL_HEIGHT (\\n[PICHEIGHT] * 1000 / \\n[PICHEIGHT_O])
.    if \\n[PICWIDTH] \
.      nr REL_WIDTH (\\n[PICWIDTH] * 1000 / \\n[PICWIDTH_O])
.    if ((\\n[REL_HEIGHT] < 1000) : (\\n[REL_WIDTH] < 1000)) \{
.      tm
.      tm \\$3 -- scaling
.      ie (\\n[REL_HEIGHT] < \\n[REL_WIDTH]) \{
.        tm ---- for HEIGHT  (* \\n[REL_HEIGHT]/1000)
.        nr PICWIDTH (\\n[REL_HEIGHT] * \\n[PICWIDTH_O] / 1000)
.      \}
.      el \{\
.        tm ---- for WIDTH   (* \\n[REL_WIDTH]/1000)
.        nr PICHEIGHT (\\n[REL_WIDTH] * \\n[PICHEIGHT_O] / 1000)
.      \}
.      tm ---- W:  \\$4 [= \\n[PICWIDTH_O]u] -> \\n[PICWIDTH]u   H: \\$5 [= \\n[PICHEIGHT_O]] -> \\n[PICHEIGHT]u
.      tm
.    \}
.\" If anything goes wrong with zero-size graphics and grep complaining
.\" about binary input, and if your grep supports the -a flag,
.\" apply groff-patch//pdfpic.patch to your groff's pdfpic.tmac
.\"  tm PDFPIC \\*[ORIENT] \\$3 \\n[PICWIDTH]u \\n[PICHEIGHT]u
.    PDFPIC \\*[ORIENT] \\$3 \\n[PICWIDTH]u \\n[PICHEIGHT]u
.  \}
.el \{\
.    PDFPIC \\*[ORIENT] \\$3 \\$4 \\$5
.  \}
.\"  nr IMAGE +1
.  nr PI \\n[OLD_PI]
.  if !'\\$2'' \{\
.    if \\n[FILLED_BEFORE] .fi
.    QP
.    sp 0.5
\*[Lifg] \\n+[IMAGE]. \\$2
.    rn .ds@auto-end-orig .ds@auto-end
.    if '\\$1'F' .sp 1.5
.    KE \" end keep
.\}
..
.\" **** TABLES *****************************************************
.de TABLESTART
.KF
..
.de TABLELABLE
.sp
.nr TABLE_LABELLED 1
.sp -.5v
.QP
\*[Litb] \\n+[TABLE]. \\$1
..
.de TABLEEND
.\}
.sp 1.5v
.KE
..
